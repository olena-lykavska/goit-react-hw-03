import React, { useId } from "react";
import { Formik, Form, Field, ErrorMessage } from "formik";
import { nanoid } from "nanoid";
import * as Yup from "yup";
import css from "./ContactForm.module.css";

const ContactForm = ({ onAddContact }) => {
  // üìå `useId` –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö `id` –¥–ª—è –ø–æ–ª—ñ–≤ —Ñ–æ—Ä–º–∏
  const nameId = useId();
  const numberId = useId();

  // üìå –°—Ö–µ–º–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –¥–ª—è `Formik`
  const validationSchema = Yup.object({
    name: Yup.string().min(3, "–ú—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏").max(50, "–ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª—ñ–≤").required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
    number: Yup.string().min(3, "–ú—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏").max(50, "–ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª—ñ–≤").required("–û–±–æ–≤'—è–∑–∫–æ–≤–æ"),
  });

  return (
    <Formik
      initialValues={{ name: "", number: "" }}
      validationSchema={validationSchema}
      onSubmit={(values, actions) => {
        onAddContact({ id: nanoid(), ...values });
        actions.resetForm(); // üìå –û—á–∏—â–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
      }}
    >
      <Form className={css.form}>
        <label htmlFor={nameId}>Name:</label>
        <Field id={nameId} type="text" name="name" />
        <ErrorMessage name="name" component="div" className={css.error} />

        <label htmlFor={numberId}>Number:</label>
        <Field id={numberId} type="text" name="number" />
        <ErrorMessage name="number" component="div" className={css.error} />

        <button type="submit">Add Contact</button>
      </Form>
    </Formik>
  );
};

export default ContactForm;
